{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\programming\\\\ToDoListDimych\\\\todolist\\\\src\\\\features\\\\Login\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField, Button, Grid } from '@material-ui/core';\nimport { useFormik } from \"formik\";\nexport const Login = () => {\n  _s();\n\n  const formik = useFormik({\n    validate: values => {\n      return {\n        email: 'bad email'\n      };\n    },\n    initialValues: {\n      email: '',\n      password: '',\n      rememberMe: false\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justify: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"To log in get registered\", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: 'https://social-network.samuraijs.com/',\n                target: '_blank',\n                children: \"here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"or use common test account credentials:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Email: free@samuraijs.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Password: free\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              margin: \"normal\",\n              ...formik.getFieldProps(\"email\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this), formik.errors.firstName ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: formik.errors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 52\n            }, this) : null, /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"password\",\n              label: \"Password\",\n              margin: \"normal\",\n              ...formik.getFieldProps(\"password\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              label: 'Remember me',\n              control: /*#__PURE__*/_jsxDEV(Checkbox, { ...formik.getFieldProps('rememberMe'),\n                checked: formik.values.rememberMe\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: 'submit',\n              variant: 'contained',\n              color: 'primary',\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Login, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/programming/ToDoListDimych/todolist/src/features/Login/Login.tsx"],"names":["React","Checkbox","FormControl","FormControlLabel","FormGroup","FormLabel","TextField","Button","Grid","useFormik","Login","formik","validate","values","email","initialValues","password","rememberMe","onSubmit","alert","JSON","stringify","handleSubmit","getFieldProps","errors","firstName"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField, Button, Grid} from '@material-ui/core'\r\nimport {useFormik} from \"formik\";\r\n\r\nexport const Login = () => {\r\n\r\n    const formik = useFormik({\r\n        validate: (values) => {\r\n            return {\r\n                email: 'bad email'\r\n            }\r\n        },\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        onSubmit: values => {\r\n            alert(JSON.stringify(values))\r\n        },\r\n    })\r\n\r\n\r\n    return <Grid container justify=\"center\">\r\n        <Grid item xs={4}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               target={'_blank'}>here\r\n                            </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps(\"email\")}\r\n                        />\r\n                        {formik.errors.firstName ? <div>{formik.errors.firstName}</div> : null}\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps(\"password\")}\r\n                        />\r\n                        <FormControlLabel\r\n                            label={'Remember me'}\r\n                            control={<Checkbox\r\n                                {...formik.getFieldProps('rememberMe')}\r\n                                checked={formik.values.rememberMe}\r\n                            />}\r\n                        />\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </form>\r\n        </Grid>\r\n    </Grid>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}