{"ast":null,"code":"import _objectSpread from\"D:/programming/ToDoListDimych/todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"D:/programming/ToDoListDimych/todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{todolistsAPI}from'../../api/todolists-api';import{setAppStatusAC}from'../../app/app-reducer';import{handleServerNetworkError}from\"../../utils/error-utils\";var initialState=[];export var todolistsReducer=function todolistsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'REMOVE-TODOLIST':return state.filter(function(tl){return tl.id!=action.id;});case'ADD-TODOLIST':return[_objectSpread(_objectSpread({},action.todolist),{},{filter:'all',entityStatus:'idle'})].concat(_toConsumableArray(state));case'CHANGE-TODOLIST-TITLE':return state.map(function(tl){return tl.id===action.id?_objectSpread(_objectSpread({},tl),{},{title:action.title}):tl;});case'CHANGE-TODOLIST-FILTER':return state.map(function(tl){return tl.id===action.id?_objectSpread(_objectSpread({},tl),{},{filter:action.filter}):tl;});case'CHANGE-TODOLIST-ENTITY-STATUS':return state.map(function(tl){return tl.id===action.id?_objectSpread(_objectSpread({},tl),{},{entityStatus:action.status}):tl;});case'SET-TODOLISTS':return action.todolists.map(function(tl){return _objectSpread(_objectSpread({},tl),{},{filter:'all',entityStatus:'idle'});});default:return state;}};// actions\nexport var removeTodolistAC=function removeTodolistAC(id){return{type:'REMOVE-TODOLIST',id:id};};export var addTodolistAC=function addTodolistAC(todolist){return{type:'ADD-TODOLIST',todolist:todolist};};export var changeTodolistTitleAC=function changeTodolistTitleAC(id,title){return{type:'CHANGE-TODOLIST-TITLE',id:id,title:title};};export var changeTodolistFilterAC=function changeTodolistFilterAC(id,filter){return{type:'CHANGE-TODOLIST-FILTER',id:id,filter:filter};};export var changeTodolistEntityStatusAC=function changeTodolistEntityStatusAC(id,status){return{type:'CHANGE-TODOLIST-ENTITY-STATUS',id:id,status:status};};export var setTodolistsAC=function setTodolistsAC(todolists){return{type:'SET-TODOLISTS',todolists:todolists};};// thunks\nexport var fetchTodolistsTC=function fetchTodolistsTC(){return function(dispatch){dispatch(setAppStatusAC('loading'));todolistsAPI.getTodolists().then(function(res){dispatch(setTodolistsAC(res.data));dispatch(setAppStatusAC('succeeded'));}).catch(function(error){handleServerNetworkError(error,dispatch);});};};export var removeTodolistTC=function removeTodolistTC(todolistId){return function(dispatch){//изменим глобальный статус приложения, чтобы вверху полоса побежала\ndispatch(setAppStatusAC('loading'));//изменим статус конкретного тудулиста, чтобы он мог задизеблить что надо\ndispatch(changeTodolistEntityStatusAC(todolistId,'loading'));todolistsAPI.deleteTodolist(todolistId).then(function(res){dispatch(removeTodolistAC(todolistId));//скажем глобально приложению, что асинхронная операция завершена\ndispatch(setAppStatusAC('succeeded'));});};};export var addTodolistTC=function addTodolistTC(title){return function(dispatch){dispatch(setAppStatusAC('loading'));todolistsAPI.createTodolist(title).then(function(res){dispatch(addTodolistAC(res.data.data.item));dispatch(setAppStatusAC('succeeded'));});};};export var changeTodolistTitleTC=function changeTodolistTitleTC(id,title){return function(dispatch){todolistsAPI.updateTodolist(id,title).then(function(res){dispatch(changeTodolistTitleAC(id,title));});};};// types","map":{"version":3,"sources":["D:/programming/ToDoListDimych/todolist/src/features/TodolistsList/todolists-reducer.ts"],"names":["todolistsAPI","setAppStatusAC","handleServerNetworkError","initialState","todolistsReducer","state","action","type","filter","tl","id","todolist","entityStatus","map","title","status","todolists","removeTodolistAC","addTodolistAC","changeTodolistTitleAC","changeTodolistFilterAC","changeTodolistEntityStatusAC","setTodolistsAC","fetchTodolistsTC","dispatch","getTodolists","then","res","data","catch","error","removeTodolistTC","todolistId","deleteTodolist","addTodolistTC","createTodolist","item","changeTodolistTitleTC","updateTodolist"],"mappings":"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","sourcesContent":["import {todolistsAPI, TodolistType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {RequestStatusType, SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from '../../app/app-reducer'\r\nimport {handleServerNetworkError} from \"../../utils/error-utils\";\r\n\r\nconst initialState: Array<TodolistDomainType> = []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistDomainType> = initialState, action: ActionsType): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST':\r\n            return state.filter(tl => tl.id != action.id)\r\n        case 'ADD-TODOLIST':\r\n            return [{...action.todolist, filter: 'all', entityStatus: 'idle'}, ...state]\r\n        case 'CHANGE-TODOLIST-TITLE':\r\n            return state.map(tl => tl.id === action.id ? {...tl, title: action.title} : tl)\r\n        case 'CHANGE-TODOLIST-FILTER':\r\n            return state.map(tl => tl.id === action.id ? {...tl, filter: action.filter} : tl)\r\n        case 'CHANGE-TODOLIST-ENTITY-STATUS':\r\n            return state.map(tl => tl.id === action.id ? {...tl, entityStatus: action.status} : tl)\r\n        case 'SET-TODOLISTS':\r\n            return action.todolists.map(tl => ({...tl, filter: 'all', entityStatus: 'idle'}))\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTodolistAC = (id: string) => ({type: 'REMOVE-TODOLIST', id} as const)\r\nexport const addTodolistAC = (todolist: TodolistType) => ({type: 'ADD-TODOLIST', todolist} as const)\r\nexport const changeTodolistTitleAC = (id: string, title: string) => ({\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id,\r\n    title\r\n} as const)\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType) => ({\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id,\r\n    filter\r\n} as const)\r\nexport const changeTodolistEntityStatusAC = (id: string, status: RequestStatusType) => ({\r\n    type: 'CHANGE-TODOLIST-ENTITY-STATUS', id, status\r\n} as const)\r\nexport const setTodolistsAC = (todolists: Array<TodolistType>) => ({type: 'SET-TODOLISTS', todolists} as const)\r\n\r\n// thunks\r\nexport const fetchTodolistsTC = () => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.getTodolists()\r\n            .then((res) => {\r\n                dispatch(setTodolistsAC(res.data))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n            .catch(error => {\r\n                handleServerNetworkError(error, dispatch)\r\n            })\r\n    }\r\n}\r\nexport const removeTodolistTC = (todolistId: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        //изменим глобальный статус приложения, чтобы вверху полоса побежала\r\n        dispatch(setAppStatusAC('loading'))\r\n        //изменим статус конкретного тудулиста, чтобы он мог задизеблить что надо\r\n        dispatch(changeTodolistEntityStatusAC(todolistId, 'loading'))\r\n        todolistsAPI.deleteTodolist(todolistId)\r\n            .then((res) => {\r\n                dispatch(removeTodolistAC(todolistId))\r\n                //скажем глобально приложению, что асинхронная операция завершена\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const addTodolistTC = (title: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.createTodolist(title)\r\n            .then((res) => {\r\n                dispatch(addTodolistAC(res.data.data.item))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const changeTodolistTitleTC = (id: string, title: string) => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        todolistsAPI.updateTodolist(id, title)\r\n            .then((res) => {\r\n                dispatch(changeTodolistTitleAC(id, title))\r\n            })\r\n    }\r\n}\r\n\r\n// types\r\nexport type AddTodolistActionType = ReturnType<typeof addTodolistAC>;\r\nexport type RemoveTodolistActionType = ReturnType<typeof removeTodolistAC>;\r\nexport type SetTodolistsActionType = ReturnType<typeof setTodolistsAC>;\r\ntype ActionsType =\r\n    | RemoveTodolistActionType\r\n    | AddTodolistActionType\r\n    | ReturnType<typeof changeTodolistTitleAC>\r\n    | ReturnType<typeof changeTodolistFilterAC>\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof changeTodolistEntityStatusAC>\r\nexport type FilterValuesType = 'all' | 'active' | 'completed';\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>\r\n"]},"metadata":{},"sourceType":"module"}