{"ast":null,"code":"import _slicedToArray from\"D:/programming/ToDoListDimych/todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState}from'react';import{IconButton,TextField}from'@material-ui/core';import{AddBox}from'@material-ui/icons';export var AddItemForm=/*#__PURE__*/React.memo(function(_ref){var addItem=_ref.addItem,_ref$disabled=_ref.disabled,disabled=_ref$disabled===void 0?false:_ref$disabled;console.log(\"AddItemForm called\");var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var addItemHandler=function addItemHandler(){if(title.trim()!==\"\"){addItem(title);setTitle(\"\");}else{setError(\"Title is required\");}};var onChangeHandler=function onChangeHandler(e){setTitle(e.currentTarget.value);};var onKeyPressHandler=function onKeyPressHandler(e){if(error!==null){setError(null);}if(e.charCode===13){addItemHandler();}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",disabled:disabled,error:!!error,value:title,onChange:onChangeHandler,onKeyPress:onKeyPressHandler,label:\"Title\",helperText:error}),/*#__PURE__*/_jsx(IconButton,{color:\"primary\",onClick:addItemHandler,disabled:disabled,children:/*#__PURE__*/_jsx(AddBox,{})})]});});","map":{"version":3,"sources":["D:/programming/ToDoListDimych/todolist/src/components/AddItemForm/AddItemForm.tsx"],"names":["React","useState","IconButton","TextField","AddBox","AddItemForm","memo","addItem","disabled","console","log","title","setTitle","error","setError","addItemHandler","trim","onChangeHandler","e","currentTarget","value","onKeyPressHandler","charCode"],"mappings":"qPAAA,MAAOA,CAAAA,KAAP,EAA2CC,QAA3C,KAA0D,OAA1D,CACA,OAAkCC,UAAlC,CAA8CC,SAA9C,KAA8D,mBAA9D,CACA,OAAQC,MAAR,KAAqB,oBAArB,CAOA,MAAO,IAAMC,CAAAA,WAAW,cAAGL,KAAK,CAACM,IAAN,CAAW,cAA4D,IAAlDC,CAAAA,OAAkD,MAAlDA,OAAkD,oBAAzCC,QAAyC,CAAzCA,QAAyC,wBAA9B,KAA8B,eAC9FC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAD8F,cAGtET,QAAQ,CAAC,EAAD,CAH8D,wCAGzFU,KAHyF,eAGlFC,QAHkF,8BAItEX,QAAQ,CAAgB,IAAhB,CAJ8D,yCAIzFY,KAJyF,eAIlFC,QAJkF,eAM9F,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzB,GAAIJ,KAAK,CAACK,IAAN,KAAiB,EAArB,CAAyB,CACrBT,OAAO,CAACI,KAAD,CAAP,CACAC,QAAQ,CAAC,EAAD,CAAR,CACH,CAHD,IAGO,CACHE,QAAQ,CAAC,mBAAD,CAAR,CACH,CACJ,CAPD,CASA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,CAAD,CAAsC,CAC1DN,QAAQ,CAACM,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAR,CACH,CAFD,CAIA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACH,CAAD,CAAwC,CAC9D,GAAIL,KAAK,GAAK,IAAd,CAAoB,CAChBC,QAAQ,CAAC,IAAD,CAAR,CACH,CACD,GAAII,CAAC,CAACI,QAAF,GAAe,EAAnB,CAAuB,CACnBP,cAAc,GACjB,CACJ,CAPD,CASA,mBAAO,oCACH,KAAC,SAAD,EAAW,OAAO,CAAC,UAAnB,CACW,QAAQ,CAAEP,QADrB,CAEW,KAAK,CAAE,CAAC,CAACK,KAFpB,CAGW,KAAK,CAAEF,KAHlB,CAIW,QAAQ,CAAEM,eAJrB,CAKW,UAAU,CAAEI,iBALvB,CAMW,KAAK,CAAC,OANjB,CAOW,UAAU,CAAER,KAPvB,EADG,cAUH,KAAC,UAAD,EAAY,KAAK,CAAC,SAAlB,CAA4B,OAAO,CAAEE,cAArC,CAAqD,QAAQ,CAAEP,QAA/D,uBACI,KAAC,MAAD,IADJ,EAVG,GAAP,CAcH,CA1C0B,CAApB","sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport const AddItemForm = React.memo(function({addItem, disabled = false}: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItemHandler = () => {\r\n        if (title.trim() !== \"\") {\r\n            addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItemHandler();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   disabled={disabled}\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItemHandler} disabled={disabled}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n"]},"metadata":{},"sourceType":"module"}