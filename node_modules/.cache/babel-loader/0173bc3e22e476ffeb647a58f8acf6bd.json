{"ast":null,"code":"import { tasksReducer } from './tasks-reducer';\nimport { todolistsReducer } from './todolists-reducer';\nimport { combineReducers, createStore } from 'redux'; // объединяя reducer-ы с помощью combineReducers,\n// мы задаём структуру нашего единственного объекта-состояния\n\nconst rootReducer = combineReducers({\n  tasks: tasksReducer,\n  todolists: todolistsReducer\n}); // непосредственно создаём store\n\nexport const store = createStore(rootReducer); // определить автоматически тип всего объекта состояния\n\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\n// @ts-ignore\nwindow.store = store;","map":{"version":3,"sources":["D:/programming/ToDoListDimych/todolist/src/state/store.ts"],"names":["tasksReducer","todolistsReducer","combineReducers","createStore","rootReducer","tasks","todolists","store","window"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,iBAA3B;AACA,SAAQC,gBAAR,QAA+B,qBAA/B;AACA,SAAQC,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C,C,CAEA;AACA;;AACA,MAAMC,WAAW,GAAGF,eAAe,CAAC;AAChCG,EAAAA,KAAK,EAAEL,YADyB;AAEhCM,EAAAA,SAAS,EAAEL;AAFqB,CAAD,CAAnC,C,CAIA;;AACA,OAAO,MAAMM,KAAK,GAAGJ,WAAW,CAACC,WAAD,CAAzB,C,CACP;;AAGA;AACA;AACAI,MAAM,CAACD,KAAP,GAAeA,KAAf","sourcesContent":["import {tasksReducer} from './tasks-reducer';\r\nimport {todolistsReducer} from './todolists-reducer';\r\nimport {combineReducers, createStore} from 'redux';\r\n\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\nconst rootReducer = combineReducers({\r\n    tasks: tasksReducer,\r\n    todolists: todolistsReducer\r\n})\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer);\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;\r\n"]},"metadata":{},"sourceType":"module"}