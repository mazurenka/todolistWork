{"ast":null,"code":"import { todolistsAPI } from '../api/todolists-api';\nconst initialState = [];\nexport const todolistsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'REMOVE-TODOLIST':\n      return state.filter(tl => tl.id !== action.id);\n\n    case 'ADD-TODOLIST':\n      return [{ ...action.todolist,\n        filter: \"all\"\n      }, ...state];\n\n    case 'CHANGE-TODOLIST-TITLE':\n      return;\n      {\n        const todolist = state.find(tl => tl.id === action.id);\n\n        if (todolist) {\n          // если нашёлся - изменим ему заголовок\n          todolist.title = action.title;\n        }\n\n        return [...state];\n      }\n\n    case 'CHANGE-TODOLIST-FILTER':\n      {\n        const todolist = state.find(tl => tl.id === action.id);\n\n        if (todolist) {\n          // если нашёлся - изменим ему заголовок\n          todolist.filter = action.filter;\n        }\n\n        return [...state];\n      }\n\n    case \"SET-TODOLISTS\":\n      {\n        return action.todolists.map(tl => {\n          return { ...tl,\n            filter: \"all\"\n          };\n        });\n      }\n\n    default:\n      return state;\n  }\n}; // actions\n\nexport const removeTodolistAC = todolistId => ({\n  type: 'REMOVE-TODOLIST',\n  id: todolistId\n});\nexport const addTodolistAC = todolist => ({\n  type: 'ADD-TODOLIST',\n  todolist\n});\nexport const changeTodolistTitleAC = (id, title) => ({\n  type: 'CHANGE-TODOLIST-TITLE',\n  id,\n  title\n});\nexport const changeTodolistFilterAC = (id, filter) => ({\n  type: 'CHANGE-TODOLIST-FILTER',\n  id,\n  filter\n});\nexport const setTodolistsAC = todolists => ({\n  type: \"SET-TODOLISTS\",\n  todolists\n}); // thunks\n\nexport const fetchTodolistsTC = () => {\n  return dispatch => {\n    todolistsAPI.getTodolists().then(res => {\n      dispatch(setTodolistsAC(res.data));\n    });\n  };\n};\nexport const removeTodolistTC = todolistId => {\n  return dispatch => {\n    todolistsAPI.deleteTodolist(todolistId).then(res => {\n      dispatch(removeTodolistAC(todolistId));\n    });\n  };\n};\nexport const addTodolistTC = title => {\n  return dispatch => {\n    todolistsAPI.createTodolist(title).then(res => {\n      dispatch(addTodolistAC(res.data.data.item));\n    });\n  };\n};\nexport const changeTodolistTitleTC = (id, title) => {\n  return dispatch => {\n    todolistsAPI.updateTodolist(id, title).then(res => {\n      dispatch(changeTodolistTitleAC(id, title));\n    });\n  };\n}; // types","map":{"version":3,"sources":["D:/programming/ToDoListDimych/todolist/src/state/todolists-reducer.ts"],"names":["todolistsAPI","initialState","todolistsReducer","state","action","type","filter","tl","id","todolist","find","title","todolists","map","removeTodolistAC","todolistId","addTodolistAC","changeTodolistTitleAC","changeTodolistFilterAC","setTodolistsAC","fetchTodolistsTC","dispatch","getTodolists","then","res","data","removeTodolistTC","deleteTodolist","addTodolistTC","createTodolist","item","changeTodolistTitleTC","updateTodolist"],"mappings":"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","sourcesContent":["import {todolistsAPI, TodolistType} from '../api/todolists-api'\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst initialState: Array<TodolistDomainType> = []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistDomainType> = initialState, action: ActionsType): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST':\r\n            return state.filter(tl => tl.id !== action.id)\r\n        case 'ADD-TODOLIST':\r\n            return [{...action.todolist, filter: \"all\"}, ...state]\r\n        case 'CHANGE-TODOLIST-TITLE':\r\n            return \r\n        {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                // если нашёлся - изменим ему заголовок\r\n                todolist.title = action.title;\r\n            }\r\n            return [...state]\r\n        }\r\n        case 'CHANGE-TODOLIST-FILTER': {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                // если нашёлся - изменим ему заголовок\r\n                todolist.filter = action.filter;\r\n            }\r\n            return [...state]\r\n        }\r\n        case \"SET-TODOLISTS\": {\r\n            return action.todolists.map(tl => {\r\n                return {\r\n                    ...tl,\r\n                    filter: \"all\"\r\n                }\r\n            })\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTodolistAC = (todolistId: string) => ({type: 'REMOVE-TODOLIST', id: todolistId} as const)\r\nexport const addTodolistAC = (todolist: TodolistType) => ({type: 'ADD-TODOLIST', todolist} as const)\r\nexport const changeTodolistTitleAC = (id: string, title: string) => ({\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id,\r\n    title\r\n} as const)\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType) => ({\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id,\r\n    filter\r\n} as const)\r\nexport const setTodolistsAC = (todolists: Array<TodolistType>) => ({type: \"SET-TODOLISTS\", todolists} as const)\r\n\r\n// thunks\r\nexport const fetchTodolistsTC = () => {\r\n    return (dispatch: Dispatch) => {\r\n        todolistsAPI.getTodolists()\r\n            .then((res) => {\r\n                dispatch(setTodolistsAC(res.data))\r\n            })\r\n    }\r\n}\r\nexport const removeTodolistTC = (todolistId: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        todolistsAPI.deleteTodolist(todolistId)\r\n            .then((res) => {\r\n                dispatch(removeTodolistAC(todolistId))\r\n            })\r\n    }\r\n}\r\nexport const addTodolistTC = (title: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        todolistsAPI.createTodolist(title)\r\n            .then((res) => {\r\n                dispatch(addTodolistAC(res.data.data.item))\r\n            })\r\n    }\r\n}\r\nexport const changeTodolistTitleTC = (id: string, title: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        todolistsAPI.updateTodolist(id, title)\r\n            .then((res) => {\r\n                dispatch(changeTodolistTitleAC(id, title))\r\n            })\r\n    }\r\n}\r\n\r\n// types\r\ntype ActionsType =\r\n    | RemoveTodolistActionType\r\n    | AddTodolistActionType\r\n    | ReturnType<typeof changeTodolistTitleAC>\r\n    | ReturnType<typeof changeTodolistFilterAC>\r\n    | SetTodolistsActionType\r\nexport type AddTodolistActionType = ReturnType<typeof addTodolistAC>\r\nexport type RemoveTodolistActionType = ReturnType<typeof removeTodolistAC>\r\nexport type SetTodolistsActionType = ReturnType<typeof setTodolistsAC>\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}