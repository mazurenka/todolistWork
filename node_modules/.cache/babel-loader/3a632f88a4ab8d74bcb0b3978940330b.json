{"ast":null,"code":"import { v1 } from 'uuid';\nconst initialState = [\n  /*{id: todolistId1, title: 'What to learn', filter: 'all', addedDate: '', order: 0},\r\n  {id: todolistId2, title: 'What to buy', filter: 'all', addedDate: '', order: 0}*/\n];\nexport const todolistsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'REMOVE-TODOLIST':\n      {\n        return state.filter(tl => tl.id !== action.id);\n      }\n\n    case 'ADD-TODOLIST':\n      {\n        return [{\n          id: action.todolistId,\n          title: action.title,\n          filter: 'all',\n          addedDate: '',\n          order: 0\n        }, ...state];\n      }\n\n    case 'CHANGE-TODOLIST-TITLE':\n      {\n        const todolist = state.find(tl => tl.id === action.id);\n\n        if (todolist) {\n          // если нашёлся - изменим ему заголовок\n          todolist.title = action.title;\n        }\n\n        return [...state];\n      }\n\n    case 'CHANGE-TODOLIST-FILTER':\n      {\n        const todolist = state.find(tl => tl.id === action.id);\n\n        if (todolist) {\n          // если нашёлся - изменим ему заголовок\n          todolist.filter = action.filter;\n        }\n\n        return [...state];\n      }\n\n    default:\n      return state;\n  }\n};\nexport const removeTodolistAC = todolistId => {\n  return {\n    type: 'REMOVE-TODOLIST',\n    id: todolistId\n  };\n};\nexport const addTodolistAC = title => {\n  return {\n    type: 'ADD-TODOLIST',\n    title: title,\n    todolistId: v1()\n  };\n};\nexport const changeTodolistTitleAC = (id, title) => {\n  return {\n    type: 'CHANGE-TODOLIST-TITLE',\n    id: id,\n    title: title\n  };\n};\nexport const changeTodolistFilterAC = (id, filter) => {\n  return {\n    type: 'CHANGE-TODOLIST-FILTER',\n    id: id,\n    filter: filter\n  };\n};","map":{"version":3,"sources":["D:/programming/ToDoListDimych/todolist/src/state/todolists-reducer.ts"],"names":["v1","initialState","todolistsReducer","state","action","type","filter","tl","id","todolistId","title","addedDate","order","todolist","find","removeTodolistAC","addTodolistAC","changeTodolistTitleAC","changeTodolistFilterAC"],"mappings":"AAAA,SAAQA,EAAR,QAAiB,MAAjB;AA2BA,MAAMC,YAAuC,GAAI;AAC7C;AACJ;AAFiD,CAAjD;AAUA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,KAAgC,GAAGF,YAApC,EAAkDG,MAAlD,KAAqG;AACjI,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,iBAAL;AAAwB;AACpB,eAAOF,KAAK,CAACG,MAAN,CAAaC,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUJ,MAAM,CAACI,EAApC,CAAP;AACH;;AACD,SAAK,cAAL;AAAqB;AACjB,eAAO,CAAC;AACJA,UAAAA,EAAE,EAAEJ,MAAM,CAACK,UADP;AAEJC,UAAAA,KAAK,EAAEN,MAAM,CAACM,KAFV;AAGJJ,UAAAA,MAAM,EAAE,KAHJ;AAIJK,UAAAA,SAAS,EAAE,EAJP;AAKJC,UAAAA,KAAK,EAAE;AALH,SAAD,EAMJ,GAAGT,KANC,CAAP;AAOH;;AACD,SAAK,uBAAL;AAA8B;AAC1B,cAAMU,QAAQ,GAAGV,KAAK,CAACW,IAAN,CAAWP,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUJ,MAAM,CAACI,EAAlC,CAAjB;;AACA,YAAIK,QAAJ,EAAc;AACV;AACAA,UAAAA,QAAQ,CAACH,KAAT,GAAiBN,MAAM,CAACM,KAAxB;AACH;;AACD,eAAO,CAAC,GAAGP,KAAJ,CAAP;AACH;;AACD,SAAK,wBAAL;AAA+B;AAC3B,cAAMU,QAAQ,GAAGV,KAAK,CAACW,IAAN,CAAWP,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUJ,MAAM,CAACI,EAAlC,CAAjB;;AACA,YAAIK,QAAJ,EAAc;AACV;AACAA,UAAAA,QAAQ,CAACP,MAAT,GAAkBF,MAAM,CAACE,MAAzB;AACH;;AACD,eAAO,CAAC,GAAGH,KAAJ,CAAP;AACH;;AACD;AACI,aAAOA,KAAP;AA9BR;AAgCH,CAjCM;AAmCP,OAAO,MAAMY,gBAAgB,GAAIN,UAAD,IAAkD;AAC9E,SAAO;AAAEJ,IAAAA,IAAI,EAAE,iBAAR;AAA2BG,IAAAA,EAAE,EAAEC;AAA/B,GAAP;AACH,CAFM;AAGP,OAAO,MAAMO,aAAa,GAAIN,KAAD,IAA0C;AACnE,SAAO;AAAEL,IAAAA,IAAI,EAAE,cAAR;AAAwBK,IAAAA,KAAK,EAAEA,KAA/B;AAAsCD,IAAAA,UAAU,EAAET,EAAE;AAApD,GAAP;AACH,CAFM;AAGP,OAAO,MAAMiB,qBAAqB,GAAG,CAACT,EAAD,EAAaE,KAAb,KAA8D;AAC/F,SAAO;AAAEL,IAAAA,IAAI,EAAE,uBAAR;AAAiCG,IAAAA,EAAE,EAAEA,EAArC;AAAyCE,IAAAA,KAAK,EAAEA;AAAhD,GAAP;AACH,CAFM;AAGP,OAAO,MAAMQ,sBAAsB,GAAG,CAACV,EAAD,EAAaF,MAAb,KAA0E;AAC5G,SAAO;AAAED,IAAAA,IAAI,EAAE,wBAAR;AAAkCG,IAAAA,EAAE,EAAEA,EAAtC;AAA0CF,IAAAA,MAAM,EAAEA;AAAlD,GAAP;AACH,CAFM","sourcesContent":["import {v1} from 'uuid';\r\nimport {TodolistType} from '../api/todolists-api'\r\n\r\nexport type RemoveTodolistActionType = {\r\n    type: 'REMOVE-TODOLIST',\r\n    id: string\r\n}\r\nexport type AddTodolistActionType = {\r\n    type: 'ADD-TODOLIST',\r\n    title: string\r\n    todolistId: string\r\n}\r\nexport type ChangeTodolistTitleActionType = {\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id: string\r\n    title: string\r\n}\r\nexport type ChangeTodolistFilterActionType = {\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id: string\r\n    filter: FilterValuesType\r\n}\r\n\r\ntype ActionsType = RemoveTodolistActionType | AddTodolistActionType\r\n    | ChangeTodolistTitleActionType\r\n    | ChangeTodolistFilterActionType\r\n\r\nconst initialState: Array<TodolistDomainType> =  [\r\n    /*{id: todolistId1, title: 'What to learn', filter: 'all', addedDate: '', order: 0},\r\n    {id: todolistId2, title: 'What to buy', filter: 'all', addedDate: '', order: 0}*/\r\n]\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n}\r\n\r\nexport const todolistsReducer = (state: Array<TodolistDomainType> = initialState, action: ActionsType): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST': {\r\n            return state.filter(tl => tl.id !== action.id)\r\n        }\r\n        case 'ADD-TODOLIST': {\r\n            return [{\r\n                id: action.todolistId,\r\n                title: action.title,\r\n                filter: 'all',\r\n                addedDate: '',\r\n                order: 0\r\n            }, ...state]\r\n        }\r\n        case 'CHANGE-TODOLIST-TITLE': {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                // если нашёлся - изменим ему заголовок\r\n                todolist.title = action.title;\r\n            }\r\n            return [...state]\r\n        }\r\n        case 'CHANGE-TODOLIST-FILTER': {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                // если нашёлся - изменим ему заголовок\r\n                todolist.filter = action.filter;\r\n            }\r\n            return [...state]\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const removeTodolistAC = (todolistId: string): RemoveTodolistActionType => {\r\n    return { type: 'REMOVE-TODOLIST', id: todolistId}\r\n}\r\nexport const addTodolistAC = (title: string): AddTodolistActionType => {\r\n    return { type: 'ADD-TODOLIST', title: title, todolistId: v1()}\r\n}\r\nexport const changeTodolistTitleAC = (id: string, title: string): ChangeTodolistTitleActionType => {\r\n    return { type: 'CHANGE-TODOLIST-TITLE', id: id, title: title}\r\n}\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType): ChangeTodolistFilterActionType => {\r\n    return { type: 'CHANGE-TODOLIST-FILTER', id: id, filter: filter}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}