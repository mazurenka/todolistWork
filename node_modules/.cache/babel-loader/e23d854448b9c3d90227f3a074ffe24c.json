{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useCallback,useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{addTodolistTC,changeTodolistFilterAC,changeTodolistTitleTC,fetchTodolistsTC,removeTodolistTC}from'./todolists-reducer';import{addTaskTC,removeTaskTC,updateTaskTC}from'./tasks-reducer';import{Grid,Paper}from'@material-ui/core';import{AddItemForm}from'../../components/AddItemForm/AddItemForm';import{Todolist}from'./Todolist/Todolist';import{Navigate}from'react-router-dom';export var TodolistsList=function TodolistsList(_ref){var _ref$demo=_ref.demo,demo=_ref$demo===void 0?false:_ref$demo;var todolists=useSelector(function(state){return state.todolists;});var tasks=useSelector(function(state){return state.tasks;});var isLoggedIn=useSelector(function(state){return state.auth.isLoggedIn;});var dispatch=useDispatch();useEffect(function(){if(demo||!isLoggedIn){return;}var thunk=fetchTodolistsTC();dispatch(thunk);},[]);var removeTask=useCallback(function(id,todolistId){var thunk=removeTaskTC(id,todolistId);dispatch(thunk);},[]);var addTask=useCallback(function(title,todolistId){var thunk=addTaskTC(title,todolistId);dispatch(thunk);},[]);var changeStatus=useCallback(function(id,status,todolistId){var thunk=updateTaskTC(id,{status:status},todolistId);dispatch(thunk);},[]);var changeTaskTitle=useCallback(function(id,newTitle,todolistId){var thunk=updateTaskTC(id,{title:newTitle},todolistId);dispatch(thunk);},[]);var changeFilter=useCallback(function(value,todolistId){var action=changeTodolistFilterAC({id:todolistId,filter:value});dispatch(action);},[]);var removeTodolist=useCallback(function(id){var thunk=removeTodolistTC(id);dispatch(thunk);},[]);var changeTodolistTitle=useCallback(function(id,title){var thunk=changeTodolistTitleTC(id,title);dispatch(thunk);},[]);var addTodolist=useCallback(function(title){var thunk=addTodolistTC(title);dispatch(thunk);},[dispatch]);if(!isLoggedIn){return/*#__PURE__*/_jsx(Navigate,{to:\"/Login\"});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Grid,{container:true,style:{padding:'20px'},children:/*#__PURE__*/_jsx(AddItemForm,{addItem:addTodolist})}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:todolists.map(function(tl){var allTodolistTasks=tasks[tl.id];return/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Paper,{style:{padding:'10px'},children:/*#__PURE__*/_jsx(Todolist,{todolist:tl,tasks:allTodolistTasks,removeTask:removeTask,changeFilter:changeFilter,addTask:addTask,changeTaskStatus:changeStatus,removeTodolist:removeTodolist,changeTaskTitle:changeTaskTitle,changeTodolistTitle:changeTodolistTitle,demo:demo})})},tl.id);})})]});};","map":{"version":3,"sources":["D:/programming/ToDoListDimych/todolist/src/features/TodolistsList/TodolistsList.tsx"],"names":["React","useCallback","useEffect","useDispatch","useSelector","addTodolistTC","changeTodolistFilterAC","changeTodolistTitleTC","fetchTodolistsTC","removeTodolistTC","addTaskTC","removeTaskTC","updateTaskTC","Grid","Paper","AddItemForm","Todolist","Navigate","TodolistsList","demo","todolists","state","tasks","isLoggedIn","auth","dispatch","thunk","removeTask","id","todolistId","addTask","title","changeStatus","status","changeTaskTitle","newTitle","changeFilter","value","action","filter","removeTodolist","changeTodolistTitle","addTodolist","padding","map","tl","allTodolistTasks"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {\r\n    addTodolistTC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleTC,\r\n    fetchTodolistsTC,\r\n    FilterValuesType,\r\n    removeTodolistTC,\r\n    TodolistDomainType\r\n} from './todolists-reducer'\r\nimport {addTaskTC, removeTaskTC, TasksStateType, updateTaskTC} from './tasks-reducer'\r\nimport {TaskStatuses} from '../../api/todolists-api'\r\nimport {Grid, Paper} from '@material-ui/core'\r\nimport {AddItemForm} from '../../components/AddItemForm/AddItemForm'\r\nimport {Todolist} from './Todolist/Todolist'\r\nimport {Navigate} from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nexport const TodolistsList: React.FC<PropsType> = ({demo = false}) => {\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (demo || !isLoggedIn) {\r\n            return;\r\n        }\r\n        const thunk = fetchTodolistsTC()\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const thunk = removeTaskTC(id, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const thunk = addTaskTC(title, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {status}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {title: newTitle}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC({id: todolistId, filter: value})\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const thunk = removeTodolistTC(id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const thunk = changeTodolistTitleTC(id, title)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const thunk = addTodolistTC(title)\r\n        dispatch(thunk)\r\n    }, [dispatch])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to='/Login'/>\r\n    }\r\n\r\n    return <>\r\n        <Grid container style={{padding: '20px'}}>\r\n            <AddItemForm addItem={addTodolist}/>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n            {\r\n                todolists.map(tl => {\r\n                    let allTodolistTasks = tasks[tl.id]\r\n\r\n                    return <Grid item key={tl.id}>\r\n                        <Paper style={{padding: '10px'}}>\r\n                            <Todolist\r\n                                todolist={tl}\r\n                                tasks={allTodolistTasks}\r\n                                removeTask={removeTask}\r\n                                changeFilter={changeFilter}\r\n                                addTask={addTask}\r\n                                changeTaskStatus={changeStatus}\r\n                                removeTodolist={removeTodolist}\r\n                                changeTaskTitle={changeTaskTitle}\r\n                                changeTodolistTitle={changeTodolistTitle}\r\n                                demo={demo}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                })\r\n            }\r\n        </Grid>\r\n    </>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}