{"ast":null,"code":"import _objectSpread from\"D:/programming/ToDoListDimych/todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import Snackbar from'@material-ui/core/Snackbar';import MuiAlert from'@material-ui/lab/Alert';import{useDispatch,useSelector}from'react-redux';import{setAppErrorAC}from'../../app/app-reducer';function Alert(props){return/*#__PURE__*/_jsx(MuiAlert,_objectSpread({elevation:6,variant:\"filled\"},props));}export function ErrorSnackbar(){//const [open, setOpen] = React.useState(true)\nvar error=useSelector(function(state){return state.app.error;});var dispatch=useDispatch();var handleClose=function handleClose(event,reason){if(reason==='clickaway'){return;}dispatch(setAppErrorAC(null));};var isOpen=error!==null;return/*#__PURE__*/_jsx(Snackbar,{open:isOpen,autoHideDuration:6000,onClose:handleClose,children:/*#__PURE__*/_jsx(Alert,{onClose:handleClose,severity:\"error\",children:error})});}","map":{"version":3,"sources":["D:/programming/ToDoListDimych/todolist/src/components/ErrorSnackbar/ErrorSnackbar.tsx"],"names":["React","Snackbar","MuiAlert","useDispatch","useSelector","setAppErrorAC","Alert","props","ErrorSnackbar","error","state","app","dispatch","handleClose","event","reason","isOpen"],"mappings":"uMAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,QAAP,KAAmC,wBAAnC,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CAEA,OAAQC,aAAR,KAA4B,uBAA5B,CAEA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAkC,CAC9B,mBAAO,KAAC,QAAD,gBAAU,SAAS,CAAE,CAArB,CAAwB,OAAO,CAAC,QAAhC,EAA6CA,KAA7C,EAAP,CACH,CAED,MAAO,SAASC,CAAAA,aAAT,EAAyB,CAC5B;AACA,GAAMC,CAAAA,KAAK,CAAGL,WAAW,CAAkC,SAAAM,KAAK,QAAIA,CAAAA,KAAK,CAACC,GAAN,CAAUF,KAAd,EAAvC,CAAzB,CACA,GAAMG,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAEA,GAAMU,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAA+BC,MAA/B,CAAmD,CACnE,GAAIA,MAAM,GAAK,WAAf,CAA4B,CACxB,OACH,CACDH,QAAQ,CAACP,aAAa,CAAC,IAAD,CAAd,CAAR,CACH,CALD,CAQA,GAAMW,CAAAA,MAAM,CAAGP,KAAK,GAAK,IAAzB,CAEA,mBACI,KAAC,QAAD,EAAU,IAAI,CAAEO,MAAhB,CAAwB,gBAAgB,CAAE,IAA1C,CAAgD,OAAO,CAAEH,WAAzD,uBACI,KAAC,KAAD,EAAO,OAAO,CAAEA,WAAhB,CAA6B,QAAQ,CAAC,OAAtC,UACKJ,KADL,EADJ,EADJ,CAOH","sourcesContent":["import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {setAppErrorAC} from '../../app/app-reducer'\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nexport function ErrorSnackbar() {\r\n    //const [open, setOpen] = React.useState(true)\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.app.error);\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        dispatch(setAppErrorAC(null));\r\n    }\r\n\r\n\r\n    const isOpen = error !== null;\r\n\r\n    return (\r\n        <Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}