{"ast":null,"code":"import _objectWithoutProperties from\"D:/programming/ToDoListDimych/todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useCallback,useEffect}from'react';import{AddItemForm}from'../../../components/AddItemForm/AddItemForm';import{EditableSpan}from'../../../components/EditableSpan/EditableSpan';import{Button,IconButton}from'@material-ui/core';import{Delete}from'@material-ui/icons';import{Task}from'./Task/Task';import{TaskStatuses}from'../../../api/todolists-api';import{useDispatch}from'react-redux';import{fetchTasksTC}from'../tasks-reducer';export var Todolist=/*#__PURE__*/React.memo(function(_ref){var _ref$demo=_ref.demo,demo=_ref$demo===void 0?false:_ref$demo,props=_objectWithoutProperties(_ref,[\"demo\"]);console.log('Todolist called');var dispatch=useDispatch();useEffect(function(){if(demo){return;}var thunk=fetchTasksTC(props.todolist.id);dispatch(thunk);},[]);var addTask=useCallback(function(title){props.addTask(title,props.todolist.id);},[props.addTask,props.todolist.id]);var removeTodolist=function removeTodolist(){props.removeTodolist(props.todolist.id);};var changeTodolistTitle=useCallback(function(title){props.changeTodolistTitle(props.todolist.id,title);},[props.todolist.id,props.changeTodolistTitle]);var onAllClickHandler=useCallback(function(){return props.changeFilter('all',props.todolist.id);},[props.todolist.id,props.changeFilter]);var onActiveClickHandler=useCallback(function(){return props.changeFilter('active',props.todolist.id);},[props.todolist.id,props.changeFilter]);var onCompletedClickHandler=useCallback(function(){return props.changeFilter('completed',props.todolist.id);},[props.todolist.id,props.changeFilter]);var tasksForTodolist=props.tasks;if(props.todolist.filter==='active'){tasksForTodolist=props.tasks.filter(function(t){return t.status===TaskStatuses.New;});}if(props.todolist.filter==='completed'){tasksForTodolist=props.tasks.filter(function(t){return t.status===TaskStatuses.Completed;});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{children:[/*#__PURE__*/_jsx(EditableSpan,{value:props.todolist.title,onChange:changeTodolistTitle}),/*#__PURE__*/_jsx(IconButton,{onClick:removeTodolist,disabled:props.todolist.entityStatus==='loading',children:/*#__PURE__*/_jsx(Delete,{})})]}),/*#__PURE__*/_jsx(AddItemForm,{addItem:addTask,disabled:props.todolist.entityStatus==='loading'}),/*#__PURE__*/_jsx(\"div\",{children:tasksForTodolist.map(function(t){return/*#__PURE__*/_jsx(Task,{task:t,todolistId:props.todolist.id,removeTask:props.removeTask,changeTaskTitle:props.changeTaskTitle,changeTaskStatus:props.changeTaskStatus},t.id);})}),/*#__PURE__*/_jsxs(\"div\",{style:{paddingTop:'10px'},children:[/*#__PURE__*/_jsx(Button,{variant:props.todolist.filter==='all'?'outlined':'text',onClick:onAllClickHandler,color:'default',children:\"All\"}),/*#__PURE__*/_jsx(Button,{variant:props.todolist.filter==='active'?'outlined':'text',onClick:onActiveClickHandler,color:'primary',children:\"Active\"}),/*#__PURE__*/_jsx(Button,{variant:props.todolist.filter==='completed'?'outlined':'text',onClick:onCompletedClickHandler,color:'secondary',children:\"Completed\"})]})]});});","map":{"version":3,"sources":["D:/programming/ToDoListDimych/todolist/src/features/TodolistsList/Todolist/Todolist.tsx"],"names":["React","useCallback","useEffect","AddItemForm","EditableSpan","Button","IconButton","Delete","Task","TaskStatuses","useDispatch","fetchTasksTC","Todolist","memo","demo","props","console","log","dispatch","thunk","todolist","id","addTask","title","removeTodolist","changeTodolistTitle","onAllClickHandler","changeFilter","onActiveClickHandler","onCompletedClickHandler","tasksForTodolist","tasks","filter","t","status","New","Completed","entityStatus","map","removeTask","changeTaskTitle","changeTaskStatus","paddingTop"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType, TodolistDomainType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\n\r\ntype PropsType = {\r\n    todolist: TodolistDomainType\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    demo?: boolean\r\n}\r\n\r\nexport const Todolist = React.memo(function ({demo = false, ...props}: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (demo) {\r\n            return\r\n        }\r\n        const thunk = fetchTasksTC(props.todolist.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.todolist.id)\r\n    }, [props.addTask, props.todolist.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.todolist.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.todolist.id, title)\r\n    }, [props.todolist.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.todolist.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.todolist.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.todolist.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.todolist.entityStatus === 'loading'}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} disabled={props.todolist.entityStatus === 'loading'}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.todolist.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.todolist.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}