{"ast":null,"code":"import { todolistsAPI } from '../api/todolists-api';\nconst initialState = [\n  /*{id: todolistId1, title: 'What to learn', filter: 'all', addedDate: '', order: 0},\r\n  {id: todolistId2, title: 'What to buy', filter: 'all', addedDate: '', order: 0}*/\n];\nexport const todolistsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'REMOVE-TODOLIST':\n      {\n        return state.filter(tl => tl.id !== action.id);\n      }\n\n    case 'ADD-TODOLIST':\n      {\n        const newTodolist = { ...action.todolist,\n          filter: \"all\"\n        };\n        return [newTodolist, ...state];\n      }\n\n    case 'CHANGE-TODOLIST-TITLE':\n      {\n        const todolist = state.find(tl => tl.id === action.id);\n\n        if (todolist) {\n          // если нашёлся - изменим ему заголовок\n          todolist.title = action.title;\n        }\n\n        return [...state];\n      }\n\n    case 'CHANGE-TODOLIST-FILTER':\n      {\n        const todolist = state.find(tl => tl.id === action.id);\n\n        if (todolist) {\n          // если нашёлся - изменим ему заголовок\n          todolist.filter = action.filter;\n        }\n\n        return [...state];\n      }\n\n    case \"SET-TODOLISTS\":\n      {\n        return action.todolists.map(tl => {\n          return { ...tl,\n            filter: \"all\"\n          };\n        });\n      }\n\n    default:\n      return state;\n  }\n};\nexport const removeTodolistAC = todolistId => {\n  return {\n    type: 'REMOVE-TODOLIST',\n    id: todolistId\n  };\n};\nexport const addTodolistAC = todolist => {\n  return {\n    type: 'ADD-TODOLIST',\n    todolist\n  };\n};\nexport const changeTodolistTitleAC = (id, title) => {\n  return {\n    type: 'CHANGE-TODOLIST-TITLE',\n    id: id,\n    title: title\n  };\n};\nexport const changeTodolistFilterAC = (id, filter) => {\n  return {\n    type: 'CHANGE-TODOLIST-FILTER',\n    id: id,\n    filter: filter\n  };\n};\nexport const setTodolistsAC = todolists => {\n  return {\n    type: \"SET-TODOLISTS\",\n    todolists\n  };\n};\nexport const fetchTodolistsTC = () => {\n  return dispatch => {\n    todolistsAPI.getTodolists().then(res => {\n      dispatch(setTodolistsAC(res.data));\n    });\n  };\n};\nexport const removeTodolistTC = todolistId => {\n  return dispatch => {\n    todolistsAPI.deleteTodolist(todolistId).then(res => {\n      dispatch(removeTodolistAC(todolistId));\n    });\n  };\n};\nexport const addTodolistTC = title => {\n  return dispatch => {\n    todolistsAPI.createTodolist(title).then(res => {\n      dispatch(addTodolistAC(res.data.data.item));\n    });\n  };\n};\nexport const changeTodolistTitleTC = (id, title) => {\n  return dispatch => {\n    todolistsAPI.updateTodolist(id, title).then(res => {\n      dispatch(changeTodolistTitleAC(id, title));\n    });\n  };\n};","map":{"version":3,"sources":["D:/programming/ToDoListDimych/todolist/src/state/todolists-reducer.ts"],"names":["todolistsAPI","initialState","todolistsReducer","state","action","type","filter","tl","id","newTodolist","todolist","find","title","todolists","map","removeTodolistAC","todolistId","addTodolistAC","changeTodolistTitleAC","changeTodolistFilterAC","setTodolistsAC","fetchTodolistsTC","dispatch","getTodolists","then","res","data","removeTodolistTC","deleteTodolist","addTodolistTC","createTodolist","item","changeTodolistTitleTC","updateTodolist"],"mappings":"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","sourcesContent":["import {todolistsAPI, TodolistType} from '../api/todolists-api'\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\ntype AddTodolistActionType = {\r\n    type: 'ADD-TODOLIST',\r\n    todolist: TodolistType\r\n}\r\ntype ChangeTodolistTitleActionType = {\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id: string\r\n    title: string\r\n}\r\ntype ChangeTodolistFilterActionType = {\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id: string\r\n    filter: FilterValuesType\r\n}\r\ntype SetTodolistsActionType = {\r\n    type: 'SET-TODOLISTS',\r\n    todolists: Array<TodolistType>\r\n}\r\n\r\ntype ActionsType =\r\n    | RemoveTodolistActionType\r\n    | AddTodolistActionType\r\n    | ChangeTodolistTitleActionType\r\n    | ChangeTodolistFilterActionType\r\n    | SetTodolistsActionType\r\n\r\nconst initialState: Array<TodolistDomainType> = [\r\n    /*{id: todolistId1, title: 'What to learn', filter: 'all', addedDate: '', order: 0},\r\n    {id: todolistId2, title: 'What to buy', filter: 'all', addedDate: '', order: 0}*/\r\n]\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n}\r\n\r\nexport const todolistsReducer = (state: Array<TodolistDomainType> = initialState, action: ActionsType): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST': {\r\n            return state.filter(tl => tl.id !== action.id)\r\n        }\r\n        case 'ADD-TODOLIST': {\r\n            const newTodolist: TodolistDomainType = {...action.todolist, filter: \"all\"}\r\n            return [newTodolist, ...state]\r\n        }\r\n        case 'CHANGE-TODOLIST-TITLE': {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                // если нашёлся - изменим ему заголовок\r\n                todolist.title = action.title;\r\n            }\r\n            return [...state]\r\n        }\r\n        case 'CHANGE-TODOLIST-FILTER': {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                // если нашёлся - изменим ему заголовок\r\n                todolist.filter = action.filter;\r\n            }\r\n            return [...state]\r\n        }\r\n        case \"SET-TODOLISTS\": {\r\n            return action.todolists.map(tl => {\r\n                return {\r\n                    ...tl,\r\n                    filter: \"all\"\r\n                }\r\n            })\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype RemoveTodolistActionType = {\r\n    type: 'REMOVE-TODOLIST'\r\n    id: string\r\n}\r\n\r\nexport const removeTodolistAC = (todolistId: string): RemoveTodolistActionType => {\r\n    return {type: 'REMOVE-TODOLIST', id: todolistId}\r\n}\r\nexport const addTodolistAC = (todolist: TodolistType): AddTodolistActionType => {\r\n    return {type: 'ADD-TODOLIST', todolist}\r\n}\r\nexport const changeTodolistTitleAC = (id: string, title: string): ChangeTodolistTitleActionType => {\r\n    return {type: 'CHANGE-TODOLIST-TITLE', id: id, title: title}\r\n}\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType): ChangeTodolistFilterActionType => {\r\n    return {type: 'CHANGE-TODOLIST-FILTER', id: id, filter: filter}\r\n}\r\nexport const setTodolistsAC = (todolists: Array<TodolistType>): SetTodolistsActionType => {\r\n    return {type: \"SET-TODOLISTS\", todolists}\r\n}\r\n\r\nexport const fetchTodolistsTC = () => {\r\n    return (dispatch: Dispatch) => {\r\n        todolistsAPI.getTodolists()\r\n            .then((res) => {\r\n                dispatch(setTodolistsAC(res.data))\r\n            })\r\n    }\r\n}\r\n\r\nexport const removeTodolistTC = (todolistId: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        todolistsAPI.deleteTodolist(todolistId)\r\n            .then((res) => {\r\n                dispatch(removeTodolistAC(todolistId))\r\n            })\r\n    }\r\n}\r\n\r\nexport const addTodolistTC = (title: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        todolistsAPI.createTodolist(title)\r\n            .then((res) => {\r\n                dispatch(addTodolistAC(res.data.data.item))\r\n            })\r\n    }\r\n}\r\n\r\nexport const changeTodolistTitleTC = (id: string, title: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        todolistsAPI.updateTodolist(id, title)\r\n            .then((res) => {\r\n                dispatch(changeTodolistTitleAC(id, title))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}