{"ast":null,"code":"import{setAppStatusAC}from'../../app/app-reducer';import{authAPI}from\"../../api/todolists-api\";import{handleServerAppError}from\"../../utils/error-utils\";import{createSlice}from\"@reduxjs/toolkit\";var initialState={isLoggedIn:false};var slice=createSlice({name:\"auth\",initialState:initialState,reducers:{setIsLoggedInAC:function setIsLoggedInAC(state,action){state.isLoggedIn=action.payload.value;}}});export var authReducer=slice.reducer;var setIsLoggedInAC=slice.actions.setIsLoggedInAC;// thunks\nexport{setIsLoggedInAC};export var loginTC=function loginTC(data){return function(dispatch){dispatch(setAppStatusAC('loading'));authAPI.login(data).then(function(res){if(res.data.resultCode===0){dispatch(setIsLoggedInAC({value:true}));dispatch(setAppStatusAC('succeeded'));}else{handleServerAppError(res.data,dispatch);}}).catch(function(error){handleServerAppError(error,dispatch);});};};export var logoutTC=function logoutTC(){return function(dispatch){dispatch(setAppStatusAC('loading'));authAPI.logout().then(function(res){if(res.data.resultCode===0){dispatch(setIsLoggedInAC({value:false}));dispatch(setAppStatusAC('succeeded'));}else{handleServerAppError(res.data,dispatch);}}).catch(function(error){handleServerAppError(error,dispatch);});};};","map":{"version":3,"sources":["D:/programming/ToDoListDimych/todolist/src/features/Login/auth-reducer.ts"],"names":["setAppStatusAC","authAPI","handleServerAppError","createSlice","initialState","isLoggedIn","slice","name","reducers","setIsLoggedInAC","state","action","payload","value","authReducer","reducer","actions","loginTC","data","dispatch","login","then","res","resultCode","catch","error","logoutTC","logout"],"mappings":"AACA,OAAQA,cAAR,KAA6B,uBAA7B,CACA,OAAQC,OAAR,KAAuC,yBAAvC,CACA,OAAQC,oBAAR,KAAmC,yBAAnC,CACA,OAAQC,WAAR,KAAyC,kBAAzC,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,UAAU,CAAE,KADK,CAArB,CAIA,GAAMC,CAAAA,KAAK,CAAGH,WAAW,CAAC,CACtBI,IAAI,CAAE,MADgB,CAEtBH,YAAY,CAAEA,YAFQ,CAGtBI,QAAQ,CAAE,CACNC,eADM,0BACUC,KADV,CACiBC,MADjB,CAC0D,CAC5DD,KAAK,CAACL,UAAN,CAAmBM,MAAM,CAACC,OAAP,CAAeC,KAAlC,CACH,CAHK,CAHY,CAAD,CAAzB,CAUA,MAAO,IAAMC,CAAAA,WAAW,CAAGR,KAAK,CAACS,OAA1B,C,GACON,CAAAA,e,CAAmBH,KAAK,CAACU,O,CAAzBP,e,CAEd;wBACA,MAAO,IAAMQ,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,QAA2B,UAACC,QAAD,CAAwB,CACtEA,QAAQ,CAACnB,cAAc,CAAC,SAAD,CAAf,CAAR,CACAC,OAAO,CAACmB,KAAR,CAAcF,IAAd,EACKG,IADL,CACU,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACJ,IAAJ,CAASK,UAAT,GAAwB,CAA5B,CAA+B,CAC3BJ,QAAQ,CAACV,eAAe,CAAC,CAACI,KAAK,CAAE,IAAR,CAAD,CAAhB,CAAR,CACAM,QAAQ,CAACnB,cAAc,CAAC,WAAD,CAAf,CAAR,CACH,CAHD,IAGO,CACHE,oBAAoB,CAACoB,GAAG,CAACJ,IAAL,CAAWC,QAAX,CAApB,CACH,CACJ,CARL,EASKK,KATL,CASW,SAACC,KAAD,CAAW,CACdvB,oBAAoB,CAACuB,KAAD,CAAQN,QAAR,CAApB,CACH,CAXL,EAYH,CAdsB,EAAhB,CAeP,MAAO,IAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAM,UAACP,QAAD,CAAwB,CAClDA,QAAQ,CAACnB,cAAc,CAAC,SAAD,CAAf,CAAR,CACAC,OAAO,CAAC0B,MAAR,GACKN,IADL,CACU,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACJ,IAAJ,CAASK,UAAT,GAAwB,CAA5B,CAA+B,CAC3BJ,QAAQ,CAACV,eAAe,CAAC,CAACI,KAAK,CAAE,KAAR,CAAD,CAAhB,CAAR,CACAM,QAAQ,CAACnB,cAAc,CAAC,WAAD,CAAf,CAAR,CACH,CAHD,IAGO,CACHE,oBAAoB,CAACoB,GAAG,CAACJ,IAAL,CAAWC,QAAX,CAApB,CACH,CACJ,CARL,EASKK,KATL,CASW,SAACC,KAAD,CAAW,CACdvB,oBAAoB,CAACuB,KAAD,CAAQN,QAAR,CAApB,CACH,CAXL,EAYH,CAduB,EAAjB","sourcesContent":["import {Dispatch} from 'redux'\r\nimport {setAppStatusAC} from '../../app/app-reducer'\r\nimport {authAPI, LoginParamsType} from \"../../api/todolists-api\";\r\nimport {handleServerAppError} from \"../../utils/error-utils\";\r\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    isLoggedIn: false\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: \"auth\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        setIsLoggedInAC(state, action: PayloadAction<{value: boolean}>) {\r\n            state.isLoggedIn = action.payload.value;\r\n        }\r\n    }\r\n})\r\n\r\nexport const authReducer = slice.reducer\r\nexport const {setIsLoggedInAC} = slice.actions\r\n\r\n// thunks\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    authAPI.login(data)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(setIsLoggedInAC({value: true}))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            } else {\r\n                handleServerAppError(res.data, dispatch)\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            handleServerAppError(error, dispatch)\r\n        })\r\n}\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    authAPI.logout()\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(setIsLoggedInAC({value: false}))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            } else {\r\n                handleServerAppError(res.data, dispatch)\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            handleServerAppError(error, dispatch)\r\n        })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}