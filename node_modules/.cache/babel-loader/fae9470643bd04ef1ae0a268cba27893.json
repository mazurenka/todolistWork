{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\programming\\\\ToDoListDimych\\\\todolist\\\\src\\\\features\\\\Login\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField, Button, Grid } from '@material-ui/core';\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginTC } from \"./auth-reducer\";\nimport { Redirect } from \"react-router-dom\";\nexport const Login = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n\n  const formik = useFormik({\n    validate: values => {\n      if (!values.email) {\n        return {\n          email: 'email is required'\n        };\n      }\n\n      if (!values.password) {\n        return {\n          password: 'password is required'\n        };\n      }\n    },\n    initialValues: {\n      email: '',\n      password: '',\n      rememberMe: false\n    },\n    onSubmit: values => {\n      dispatch(loginTC(values));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justify: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"To log in get registered\", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: 'https://social-network.samuraijs.com/',\n                target: '_blank',\n                children: \"here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"or use common test account credentials:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Email: free@samuraijs.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Password: free\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              margin: \"normal\",\n              ...formik.getFieldProps(\"email\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: formik.errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 48\n            }, this) : null, /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"password\",\n              label: \"Password\",\n              margin: \"normal\",\n              ...formik.getFieldProps(\"password\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: formik.errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 51\n            }, this) : null, /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              label: 'Remember me',\n              control: /*#__PURE__*/_jsxDEV(Checkbox, { ...formik.getFieldProps('rememberMe'),\n                checked: formik.values.rememberMe\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: 'submit',\n              variant: 'contained',\n              color: 'primary',\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Login, \"7A0z6vT5KiyBZhLbHZ2OBpuVKng=\", false, function () {\n  return [useDispatch, useSelector, useFormik];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/programming/ToDoListDimych/todolist/src/features/Login/Login.tsx"],"names":["React","Checkbox","FormControl","FormControlLabel","FormGroup","FormLabel","TextField","Button","Grid","useFormik","useDispatch","useSelector","loginTC","Redirect","Login","dispatch","isLoggedIn","state","auth","formik","validate","values","email","password","initialValues","rememberMe","onSubmit","handleSubmit","getFieldProps","errors"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField, Button, Grid} from '@material-ui/core'\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginTC} from \"./auth-reducer\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to/>\r\n    }\r\n\r\n    const formik = useFormik({\r\n        validate: (values) => {\r\n            if (!values.email) {\r\n                return {\r\n                    email: 'email is required'\r\n                }\r\n            }\r\n            if (!values.password) {\r\n                return {\r\n                    password: 'password is required'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values))\r\n        },\r\n    })\r\n\r\n\r\n    return <Grid container justify=\"center\">\r\n        <Grid item xs={4}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               target={'_blank'}>here\r\n                            </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps(\"email\")}\r\n                        />\r\n                        {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps(\"password\")}\r\n                        />\r\n                        {formik.errors.password ? <div>{formik.errors.password}</div> : null}\r\n                        <FormControlLabel\r\n                            label={'Remember me'}\r\n                            control={<Checkbox\r\n                                {...formik.getFieldProps('rememberMe')}\r\n                                checked={formik.values.rememberMe}\r\n                            />}\r\n                        />\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </form>\r\n        </Grid>\r\n    </Grid>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}