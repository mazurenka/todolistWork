{"ast":null,"code":"import _objectSpread from\"D:/programming/ToDoListDimych/todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{authAPI}from\"../api/todolists-api\";import{setIsLoggedInAC}from\"../features/Login/auth-reducer\";var initialState={status:'idle',error:null,isInitialized:false};export var appReducer=function appReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'APP/SET-STATUS':return _objectSpread(_objectSpread({},state),{},{status:action.status});case'APP/SET-ERROR':return _objectSpread(_objectSpread({},state),{},{error:action.error});case'APP/SET-IS-INITIALIZED':return _objectSpread(_objectSpread({},state),{},{isInitialized:action.value});default:return _objectSpread({},state);}};export var setAppErrorAC=function setAppErrorAC(error){return{type:'APP/SET-ERROR',error:error};};export var setAppStatusAC=function setAppStatusAC(status){return{type:'APP/SET-STATUS',status:status};};export var setAppInitializedAC=function setAppInitializedAC(value){return{type:'APP/SET-IS-INITIALIZED',value:value};};export var initializedAppTC=function initializedAppTC(){return function(dispatch){authAPI.me().then(function(res){if(res.data.resultCode===0){dispatch(setIsLoggedInAC({value:true}));}else{}dispatch(setAppInitializedAC(true));});};};","map":{"version":3,"sources":["D:/programming/ToDoListDimych/todolist/src/app/app-reducer.ts"],"names":["authAPI","setIsLoggedInAC","initialState","status","error","isInitialized","appReducer","state","action","type","value","setAppErrorAC","setAppStatusAC","setAppInitializedAC","initializedAppTC","dispatch","me","then","res","data","resultCode"],"mappings":"4JACA,OAAQA,OAAR,KAAsB,sBAAtB,CACA,OAAQC,eAAR,KAA8B,gCAA9B,CAEA,GAAMC,CAAAA,YAA8B,CAAG,CACnCC,MAAM,CAAE,MAD2B,CAEnCC,KAAK,CAAE,IAF4B,CAGnCC,aAAa,CAAE,KAHoB,CAAvC,CAMA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAmF,IAAlFC,CAAAA,KAAkF,2DAAxDL,YAAwD,IAA1CM,CAAAA,MAA0C,2CACzG,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,gBAAL,CACI,sCAAWF,KAAX,MAAkBJ,MAAM,CAAEK,MAAM,CAACL,MAAjC,GACJ,IAAK,eAAL,CACI,sCAAWI,KAAX,MAAkBH,KAAK,CAAEI,MAAM,CAACJ,KAAhC,GACJ,IAAK,wBAAL,CACI,sCAAWG,KAAX,MAAkBF,aAAa,CAAEG,MAAM,CAACE,KAAxC,GACJ,QACI,wBAAWH,KAAX,EARR,CAUH,CAXM,CAsBP,MAAO,IAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACP,KAAD,QAA2B,CAACK,IAAI,CAAE,eAAP,CAAwBL,KAAK,CAALA,KAAxB,CAA3B,EAAtB,CACP,MAAO,IAAMQ,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACT,MAAD,QAAgC,CAACM,IAAI,CAAE,gBAAP,CAAyBN,MAAM,CAANA,MAAzB,CAAhC,EAAvB,CACP,MAAO,IAAMU,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACH,KAAD,QAAqB,CAACD,IAAI,CAAE,wBAAP,CAAiCC,KAAK,CAALA,KAAjC,CAArB,EAA5B,CAEP,MAAO,IAAMI,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAM,UAACC,QAAD,CAAwB,CAC1Df,OAAO,CAACgB,EAAR,GAAaC,IAAb,CAAkB,SAAAC,GAAG,CAAI,CACrB,GAAIA,GAAG,CAACC,IAAJ,CAASC,UAAT,GAAwB,CAA5B,CAA+B,CAC3BL,QAAQ,CAACd,eAAe,CAAC,CAACS,KAAK,CAAE,IAAR,CAAD,CAAhB,CAAR,CACH,CAFD,IAEO,CAEN,CACDK,QAAQ,CAACF,mBAAmB,CAAC,IAAD,CAApB,CAAR,CACH,CAPD,EAQH,CAT+B,EAAzB","sourcesContent":["import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../api/todolists-api\";\r\nimport {setIsLoggedInAC} from \"../features/Login/auth-reducer\";\r\n\r\nconst initialState: InitialStateType = {\r\n    status: 'idle',\r\n    error: null,\r\n    isInitialized: false\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case 'APP/SET-IS-INITIALIZED' :\r\n            return {...state, isInitialized: action.value}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type InitialStateType = {\r\n    // происходит ли сейчас взаимодействие с сервером\r\n    status: RequestStatusType\r\n    // если ошибка какая-то глобальная произойдёт - мы запишем текст ошибки сюда\r\n    error: string | null\r\n    isInitialized: boolean\r\n}\r\n\r\nexport const setAppErrorAC = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status} as const)\r\nexport const setAppInitializedAC = (value: boolean) => ({type: 'APP/SET-IS-INITIALIZED', value} as const)\r\n\r\nexport const initializedAppTC = () => (dispatch: Dispatch) => {\r\n    authAPI.me().then(res => {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setIsLoggedInAC({value: true}))\r\n        } else {\r\n\r\n        }\r\n        dispatch(setAppInitializedAC(true))\r\n    })\r\n}\r\n\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\n\r\ntype ActionsType =\r\n    | SetAppErrorActionType\r\n    | SetAppStatusActionType\r\n    | ReturnType<typeof setAppInitializedAC>\r\n"]},"metadata":{},"sourceType":"module"}