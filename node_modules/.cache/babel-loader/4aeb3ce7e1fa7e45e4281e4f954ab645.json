{"ast":null,"code":"import _objectSpread from\"D:/programming/ToDoListDimych/todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import{Button,Checkbox,FormControl,FormControlLabel,FormGroup,FormLabel,Grid,TextField}from'@material-ui/core';import{useDispatch,useSelector}from\"react-redux\";import{loginTC}from\"./auth-reducer\";import{Navigate}from\"react-router-dom\";import{useFormik}from'formik';export var Login=function Login(){var dispatch=useDispatch();var isLoggedIn=useSelector(function(state){return state.auth.isLoggedIn;});var formik=useFormik({validate:function validate(values){if(!values.email){return{email:'email is required'};}if(!values.password){return{password:'password is required'};}},initialValues:{email:'',password:'',rememberMe:false},onSubmit:function onSubmit(values){dispatch(loginTC(values));}});if(isLoggedIn){return/*#__PURE__*/_jsx(Navigate,{to:'/'});}return/*#__PURE__*/_jsx(Grid,{container:true,justify:\"center\",children:/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(\"form\",{onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsxs(FormLabel,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"To log in get registered\",/*#__PURE__*/_jsx(\"a\",{href:'https://social-network.samuraijs.com/',target:'_blank',children:\"here\"})]}),/*#__PURE__*/_jsx(\"p\",{children:\"or use common test account credentials:\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Email: free@samuraijs.com\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Password: free\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(TextField,_objectSpread({label:\"Email\",margin:\"normal\"},formik.getFieldProps(\"email\"))),formik.errors.email?/*#__PURE__*/_jsx(\"div\",{children:formik.errors.email}):null,/*#__PURE__*/_jsx(TextField,_objectSpread({type:\"password\",label:\"Password\",margin:\"normal\"},formik.getFieldProps(\"password\"))),formik.errors.password?/*#__PURE__*/_jsx(\"div\",{children:formik.errors.password}):null,/*#__PURE__*/_jsx(FormControlLabel,{label:'Remember me',control:/*#__PURE__*/_jsx(Checkbox,_objectSpread(_objectSpread({},formik.getFieldProps('rememberMe')),{},{checked:formik.values.rememberMe}))}),/*#__PURE__*/_jsx(Button,{type:'submit',variant:'contained',color:'primary',children:\"Login\"})]})]})})})});};","map":{"version":3,"sources":["D:/programming/ToDoListDimych/todolist/src/features/Login/Login.tsx"],"names":["React","Button","Checkbox","FormControl","FormControlLabel","FormGroup","FormLabel","Grid","TextField","useDispatch","useSelector","loginTC","Navigate","useFormik","Login","dispatch","isLoggedIn","state","auth","formik","validate","values","email","password","initialValues","rememberMe","onSubmit","handleSubmit","getFieldProps","errors"],"mappings":"oPAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,MAAR,CAAgBC,QAAhB,CAA0BC,WAA1B,CAAuCC,gBAAvC,CAAyDC,SAAzD,CAAoEC,SAApE,CAA+EC,IAA/E,CAAqFC,SAArF,KAAqG,mBAArG,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,OAAQC,OAAR,KAAsB,gBAAtB,CAEA,OAAQC,QAAR,KAAwB,kBAAxB,CACA,OAAQC,SAAR,KAAwB,QAAxB,CAEA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CACvB,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CAEA,GAAMO,CAAAA,UAAU,CAAGN,WAAW,CAA4B,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,CAAWF,UAAf,EAAjC,CAA9B,CAEA,GAAMG,CAAAA,MAAM,CAAGN,SAAS,CAAC,CACrBO,QAAQ,CAAE,kBAACC,MAAD,CAAY,CAClB,GAAI,CAACA,MAAM,CAACC,KAAZ,CAAmB,CACf,MAAO,CACHA,KAAK,CAAE,mBADJ,CAAP,CAGH,CACD,GAAI,CAACD,MAAM,CAACE,QAAZ,CAAsB,CAClB,MAAO,CACHA,QAAQ,CAAE,sBADP,CAAP,CAGH,CACJ,CAZoB,CAarBC,aAAa,CAAE,CACXF,KAAK,CAAE,EADI,CAEXC,QAAQ,CAAE,EAFC,CAGXE,UAAU,CAAE,KAHD,CAbM,CAkBrBC,QAAQ,CAAE,kBAAAL,MAAM,CAAI,CAChBN,QAAQ,CAACJ,OAAO,CAACU,MAAD,CAAR,CAAR,CACH,CApBoB,CAAD,CAAxB,CAuBA,GAAIL,UAAJ,CAAgB,CACZ,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,GAAd,EAAP,CACH,CAGD,mBAAO,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAC,QAAxB,uBACH,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,uBACI,aAAM,QAAQ,CAAEG,MAAM,CAACQ,YAAvB,uBACI,MAAC,WAAD,yBACI,MAAC,SAAD,yBACI,6DACI,UAAG,IAAI,CAAE,uCAAT,CACG,MAAM,CAAE,QADX,kBADJ,GADJ,cAMI,8DANJ,cAOI,gDAPJ,cAQI,qCARJ,GADJ,cAWI,MAAC,SAAD,yBACI,KAAC,SAAD,gBACI,KAAK,CAAC,OADV,CAEI,MAAM,CAAC,QAFX,EAGQR,MAAM,CAACS,aAAP,CAAqB,OAArB,CAHR,EADJ,CAMKT,MAAM,CAACU,MAAP,CAAcP,KAAd,cAAsB,qBAAMH,MAAM,CAACU,MAAP,CAAcP,KAApB,EAAtB,CAAyD,IAN9D,cAOI,KAAC,SAAD,gBACI,IAAI,CAAC,UADT,CAEI,KAAK,CAAC,UAFV,CAGI,MAAM,CAAC,QAHX,EAIQH,MAAM,CAACS,aAAP,CAAqB,UAArB,CAJR,EAPJ,CAaKT,MAAM,CAACU,MAAP,CAAcN,QAAd,cAAyB,qBAAMJ,MAAM,CAACU,MAAP,CAAcN,QAApB,EAAzB,CAA+D,IAbpE,cAcI,KAAC,gBAAD,EACI,KAAK,CAAE,aADX,CAEI,OAAO,cAAE,KAAC,QAAD,gCACDJ,MAAM,CAACS,aAAP,CAAqB,YAArB,CADC,MAEL,OAAO,CAAET,MAAM,CAACE,MAAP,CAAcI,UAFlB,GAFb,EAdJ,cAqBI,KAAC,MAAD,EAAQ,IAAI,CAAE,QAAd,CAAwB,OAAO,CAAE,WAAjC,CAA8C,KAAK,CAAE,SAArD,mBArBJ,GAXJ,GADJ,EADJ,EADG,EAAP,CAyCH,CA1EM","sourcesContent":["import React from 'react'\r\nimport {Button, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, Grid, TextField} from '@material-ui/core'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginTC} from \"./auth-reducer\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {Navigate,} from \"react-router-dom\";\r\nimport {useFormik} from 'formik';\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const formik = useFormik({\r\n        validate: (values) => {\r\n            if (!values.email) {\r\n                return {\r\n                    email: 'email is required'\r\n                }\r\n            }\r\n            if (!values.password) {\r\n                return {\r\n                    password: 'password is required'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values))\r\n        },\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Navigate to={'/'}/>\r\n    }\r\n\r\n\r\n    return <Grid container justify=\"center\">\r\n        <Grid item xs={4}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               target={'_blank'}>here\r\n                            </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps(\"email\")}\r\n                        />\r\n                        {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps(\"password\")}\r\n                        />\r\n                        {formik.errors.password ? <div>{formik.errors.password}</div> : null}\r\n                        <FormControlLabel\r\n                            label={'Remember me'}\r\n                            control={<Checkbox\r\n                                {...formik.getFieldProps('rememberMe')}\r\n                                checked={formik.values.rememberMe}\r\n                            />}\r\n                        />\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </form>\r\n        </Grid>\r\n    </Grid>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}